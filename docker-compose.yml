version: "3"
services:
  video-streamer:
    image: orovium/ab-video-streamer
    build:
      context: ./video-streamer
      dockerfile: Dockerfile
      target: dev
    container_name: video-streamer
    volumes:
      - ./video-streamer:/app
    environment:
      - PORT=80
    env_file:
      - ./video-streamer/.env
    restart: "no"

  storage-service:
    image: orovium/ab-storage-service
    build: 
      context: ./storage/azure
      dockerfile: Dockerfile
      target: dev
    container_name: storage-service
    volumes:
      - ./storage/azure:/app
    environment:
      - PORT=80
    env_file:
      - ./storage/azure/.env

  caddy:
    image: orovium/caddy
    container_name: ab-caddy
    build:
      context: ./caddy
      dockerfile: Dockerfile
    restart: "unless-stopped"
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    env_file:
      - ./caddy/.env

  postgres:
    container_name: ab-postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-truman}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-capote}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    logging:
      driver: ${POSTGRES_LOG_DRIVER:-none}

  rabbit:
    container_name: ab-rabbit
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: unless-stopped
    logging:
      driver: ${RABBIT_LOG_DRIVER:-none}
  
volumes:
  caddy_data:
    driver: local
  caddy_config:
    driver: local
  postgres:
    driver: local